{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template enables roles and features of Windows Server. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
  "Parameters": {
    "KeyPairName": {
      "Description": "Name of an existing Amazon EC2 key pair for RDP access",
      "Default": "StreamboxLiveEast",
      "Type": "String"
    },
    "HostedZone": {
      "Type": "String",
      "Default": "streambox.com",
      "Description": "The DNS name of an existing Amazon Route 53 hosted zone"
    },
    "InstanceType": {
      "Description": "Amazon EC2 instance type",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c3.large",
        "c3.xlarge",
        "g2.2xlarge",
        "hs1.8xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "i2.xlarge",
        "m1.small",
        "m3.2xlarge",
        "m3.large",
        "m3.medium",
        "m3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "t1.micro"
      ]
    },
    "Roles": {
      "Description": "A SPACE seperated list of roles that you want to enable on this instance. Valid values are AD-Certificate, AD-Domain-Services, ADLDS, DHCP, DNS, Fax, File-Services, NPAS, Print-Services, Web-Server, and WDS.",
      "Type": "String",
      "Default": "None",
      "AllowedPattern": "(((AD\\-Certificate)|(AD\\-Domain\\-Services)|(ADLDS)|(DHCP)|(DNS)|(Fax)|(File\\-Services)|(NPAS)|(Print\\-Services)|(Web\\-Server)|(WDS))( ((AD\\-Certificate)|(AD\\-Domain\\-Services)|(ADLDS)|(DHCP)|(DNS)|(Fax)|(File\\-Services)|(NPAS)|(Print\\-Services)|(Web\\-Server)|(WDS)))*)|(None)"
    },
    "Features": {
      "Description": "A SPACE seperated list of features that you want to enable on this instance. Valid values are NET-Framework, BITS, BitLocker, BranchCache, CMAK, Desktop-Experience, DAMC, Failover-Clustering, GPMC, Ink-Handwriting, Internet-Print-Client, ISNS, LPR-Port-Monitor, MSMQ, Multipath-IO, NLB, PNRP, qWave, Remote-Assistance, RDC, RPC-over-HTTP-Proxy, Simple-TCPIP, SMTP-Server, SNMP-Services, Storage-Mgr-SANS, Subsystem-UNIX-Apps, Telnet-Client, Telnet-Server, TFTP-Client, Biometric-Framework, Windows-Internal-DB, PowerShell-ISE, Backup-Features, Migration, WSRM, TIFF-IFilter, WinRM-IIS-Ext, WINS-Server, Wireless-Networking, and XPS-Viewer.",
      "Type": "String",
      "Default": "None",
      "AllowedPattern": "(((NET\\-Framework)|(BITS)|(BitLocker)|(BranchCache)|(CMAK)|(Desktop\\-Experience)|(DAMC)|(Failover\\-Clustering)|(GPMC)|(Ink\\-Handwriting)|(Internet\\-Print\\-Client)|(ISNS)|(LPR\\-Port\\-Monitor)|(MSMQ)|(Multipath\\-IO)|(NLB)|(PNRP)|(qWave)|(Remote\\-Assistance)|(RDC)|(RPC\\-over\\-HTTP\\-Proxy)|(Simple\\-TCPIP)|(SMTP\\-Server)|(SNMP\\-Services)|(Storage\\-Mgr\\-SANS)|(Subsystem\\-UNIX\\-Apps)|(Telnet\\-Client)|(Telnet\\-Server)|(TFTP\\-Client)|(Biometric\\-Framework)|(Windows\\-Internal\\-DB)|(PowerShell\\-ISE)|(Backup\\-Features)|(Migration)|(WSRM)|(TIFF\\-IFilter)|(WinRM\\-IIS\\-Ext)|(WINS\\-Server)|(Wireless\\-Networking)|(XPS\\-Viewer))( ((NET\\-Framework)|(BITS)|(BitLocker)|(BranchCache)|(CMAK)|(Desktop\\-Experience)|(DAMC)|(Failover\\-Clustering)|(GPMC)|(Ink\\-Handwriting)|(Internet\\-Print\\-Client)|(ISNS)|(LPR\\-Port\\-Monitor)|(MSMQ)|(Multipath\\-IO)|(NLB)|(PNRP)|(qWave)|(Remote\\-Assistance)|(RDC)|(RPC\\-over\\-HTTP\\-Proxy)|(Simple\\-TCPIP)|(SMTP\\-Server)|(SNMP\\-Services)|(Storage\\-Mgr\\-SANS)|(Subsystem\\-UNIX\\-Apps)|(Telnet\\-Client)|(Telnet\\-Server)|(TFTP\\-Client)|(Biometric\\-Framework)|(Windows\\-Internal\\-DB)|(PowerShell\\-ISE)|(Backup\\-Features)|(Migration)|(WSRM)|(TIFF\\-IFilter)|(WinRM\\-IIS\\-Ext)|(WINS\\-Server)|(Wireless\\-Networking)|(XPS\\-Viewer)))*( )*)|(None)"
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "m3.medium": {
        "Arch": "64"
      },
      "m1.medium": {
        "Arch": "64"
      },
      "m1.large": {
        "Arch": "64"
      },
      "m1.xlarge": {
        "Arch": "64"
      },
      "m2.xlarge": {
        "Arch": "64"
      },
      "m2.2xlarge": {
        "Arch": "64"
      },
      "m2.4xlarge": {
        "Arch": "64"
      },
      "c1.medium": {
        "Arch": "64"
      },
      "c1.xlarge": {
        "Arch": "64"
      }
    },
    "AWSRegionArch2AMI": {
      "us-east-1": {
        "64": "ami-aede32c6"
      },
      "us-west-2": {
        "64": "ami-23e79113"
      },
      "us-west-1": {
        "64": "ami-be112bfb"
      },
      "eu-west-1": {
        "64": "ami-458b4b32"
      },
      "ap-southeast-1": {
        "64": "ami-34cb9966"
      },
      "ap-southeast-2": {
        "64": "ami-9d36ada7"
      },
      "ap-northeast-1": {
        "64": "ami-cfcdb3ce"
      },
      "sa-east-1": {
        "64": "ami-c514b9d8"
      }
    }
  },
  "Resources": {
    "myDNSRecord": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "HostedZone"
              },
              "."
            ]
          ]
        },
        "Comment": "DNS name for vay testing replication.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "t1",
              ".",
              {
                "Ref": "HostedZone"
              },
              "."
            ]
          ]
        },
        "Type": "A",
        "TTL": "900",
        "ResourceRecords": [
          {
            "Ref": "IPAddress"
          }
        ]
      }
    },
    "IPAddress": {
      "Type": "AWS::EC2::EIP"
    },
    "IPAssoc": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "InstanceId": {
          "Ref": "WindowsServer"
        },
        "EIP": {
          "Ref": "IPAddress"
        }
      }
    },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "StreamboxLive",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3389",
            "ToPort": "3389",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "1770",
            "ToPort": "1770",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "1770",
            "ToPort": "1770",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6045",
            "ToPort": "6045",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "2051",
            "ToPort": "2051",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "2060",
            "ToPort": "2060",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "8",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "CidrIp": "54.228.144.249/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "CidrIp": "54.232.205.141/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "CidrIp": "54.244.201.85/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "CidrIp": "54.249.163.160/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "CidrIp": "54.251.226.33/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "CidrIp": "54.252.158.34/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "CidrIp": "54.83.19.155/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "CidrIp": "98.232.114.202/32"
          }
        ]
      }
    },
    "WindowsServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "C:\\Users\\Administrator\\Downloads\\es_v3.0-2.1.43-masteresv3.0-7f0a32d.exe": {
                "source": "http://taylors-bucket.s3.amazonaws.com/es_v3.0-2.1.43-masteresv3.0-7f0a32d.exe"
              },
              "C:\\Users\\Administrator\\Downloads\\es_v2.4.0.8-2.1.28-masteres-1ee1348.exe": {
                "source": "http://taylors-bucket.s3.amazonaws.com/es_v2.4.0.8-2.1.28-masteres-1ee1348.exe"
              },
              "C:\\Users\\Administrator\\Downloads\\es_v2.4.0.8-2.1.28-masteres-1ee1348.exe-changelog.txt": {
                "source": "http://taylors-bucket.s3.amazonaws.com/es_v2.4.0.8-2.1.28-masteres-1ee1348.exe-changelog.txt"
              },
              "C:\\Users\\Administrator\\Downloads\\es_v2.4.0.8-2.1.28-masteres-1ee1348.exe-changelogsummary.txt": {
                "source": "http://taylors-bucket.s3.amazonaws.com/es_v2.4.0.8-2.1.28-masteres-1ee1348.exe-changelogsummary.txt"
              },
              "C:\\Users\\Administrator\\Downloads\\MySQL_v0.0.1.0.exe": {
                "source": "http://dl.dropbox.com/u/9140609/sb/ephemeral/MySQL_v0.0.1.0.exe"
              },
              "C:\\Users\\Administrator\\Downloads\\ls_auto_activate.exe": {
                "source": "http://dl.dropbox.com/u/9140609/sb/ephemeral/ls_auto_activate.exe"
              },
              "C:\\Users\\Administrator\\Downloads\\cygwinsetup_v0.0.63.0.exe": {
                "source": "http://dl.dropbox.com/u/9140609/sb/ephemeral/cygwinsetup_v0.0.63.0.exe"
              },
              "C:\\Users\\Administrator\\Downloads\\Streambox_apache_SSL_cert_v1.1.0.0_sfx.exe": {
                "source": "http://taylors-bucket.s3.amazonaws.com/Streambox_apache_SSL_cert_v1.1.0.0_sfx.exe"
              },
              "c:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.WindowsServer.Metadata.AWS::CloudFormation::Init\n",
                      "action=cfn-init.exe -v -s ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " -r WindowsServer",
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              }
            },
            "commands": {
              "1-install-roles": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "if not \"None\" EQU \"",
                      {
                        "Ref": "Roles"
                      },
                      "\" (servermanagercmd -install ",
                      {
                        "Ref": "Roles"
                      },
                      " -restart)"
                    ]
                  ]
                }
              },
              "2-install-features": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "if not \"None\" EQU \"",
                      {
                        "Ref": "Features"
                      },
                      "\" (servermanagercmd -install ",
                      {
                        "Ref": "Features"
                      },
                      " -restart)"
                    ]
                  ]
                }
              },
              "3-signal-success": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "cfn-signal.exe -e %ERRORLEVEL% \"",
                      {
                        "Ref": "WindowsServerWaitHandle"
                      },
                      "\""
                    ]
                  ]
                }
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "c:\\cfn\\cfn-hup.conf",
                    "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "taylor-es-demo-john-katrus-delete-after-june-4"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "40"
            }
          },
          {
            "DeviceName": "/dev/sdm",
            "Ebs": {
              "VolumeSize": "500"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r WindowsServer",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "</script>"
              ]
            ]
          }
        }
      }
    },
    "WindowsServerWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "WindowsServerWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "WindowsServer",
      "Properties": {
        "Handle": {
          "Ref": "WindowsServerWaitHandle"
        },
        "Timeout": "1800"
      }
    }
  },
  "Outputs": {
    "RolesEnabled": {
      "Value": {
        "Ref": "Roles"
      },
      "Description": "Roles enabled on this instance."
    },
    "FeaturesEnabled": {
      "Value": {
        "Ref": "Features"
      },
      "Description": "Features enabled on this instance."
    }
  }
}